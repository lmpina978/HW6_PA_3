/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        if(root == NULL) // if code does not find element in the tree, it'll return a null value
        return NULL;
        
        if(root->val==val) // the code will return null or the key if its present at root
        return root;

        if(root->val>val) // key is smaller than root's key 
        return searchBST(root->left,val);

        else if(root->val<val){ // key is greater than root's key 
        return searchBST(root->right,val);
        }
        return root;
}   
}; 
